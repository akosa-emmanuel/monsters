{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","React","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","Component","constructor","super","e","this","setState","searchField","target","value","state","componentDidMount","fetch","then","response","json","users","render","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"+RAGO,MAAMA,EAAOC,GAChBC,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,OACIE,IAAI,UACJC,IAAG,wBAAAC,OAA2BN,EAAMO,QAAQC,GAAE,4BAElDP,IAAAC,cAAA,UAAKF,EAAMO,QAAQE,MACnBR,IAAAC,cAAA,SAAIF,EAAMO,QAAQG,Q,MCLnB,MAAMC,EAAWX,GACpBC,IAAAC,cAAA,OAAKC,UAAU,aACTH,EAAMY,SAASC,IAAIN,GACjBN,IAAAC,cAACH,EAAI,CAACe,IAAKP,EAAQC,GAAID,QAASA,M,MCJrC,MAAMQ,EAAYC,IAAA,IAAC,YAACC,EAAW,aAACC,GAAaF,EAAA,OAChDf,IAAAC,cAAA,SACIC,UAAU,SACVgB,KAAK,SACLF,YAAcA,EACdG,SAAYF,K,MCFpB,MAAMG,UAAYC,YAChBC,cACEC,QAAQ,KAcVN,aAAcO,IACZC,KAAKC,SAAS,CAACC,YAAcH,EAAEI,OAAOC,SAbtCJ,KAAKK,MAAQ,CACXnB,SAAW,GACXgB,YAAc,IAIlBI,oBACEC,MAAM,8CACLC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAASX,KAAKC,SAAS,CAACf,SAAWyB,KAO3CC,SAEE,MAAM,SAAE1B,EAAQ,YAAEgB,GAAgBF,KAAKK,MACjCQ,EAAmB3B,EAAS4B,OAAOjC,GACvCA,EAAQE,KAAKgC,cAAcC,SAASd,EAAYa,gBAGlD,OACExC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAACa,EAAS,CACRE,YAAa,kBACbC,aAAcQ,KAAKR,eAErBjB,IAAAC,cAACS,EAAQ,CAACC,SAAY2B,MAMflB,QCnCAsB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,KAAKlB,IAAkD,IAAjD,OAAE8B,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASlC,EACpE8B,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,MCDDO,IAASC,WAAWC,SAASC,eAAe,SACpDhB,OACHrC,IAAAC,cAACD,IAAMsD,WAAU,KACftD,IAAAC,cAACmB,EAAG,QAORsB,M","file":"static/js/main.af24f9ad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = props =>(\r\n    <div className=\"card-container\">\r\n        <img\r\n            alt=\"monster\" \r\n            src= {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.styles.css';\r\n\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n         {props.monsters.map(monster =>(\r\n            <Card key={monster.id} monster={monster} />\r\n          ))}\r\n    </div>\r\n) ","import React from \"react\";\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>(\r\n    <input\r\n        className=\"search\"\r\n        type='search'\r\n        placeholder={ placeholder }\r\n        onChange= { handleChange}\r\n    />\r\n)\r\n\r\n","import React, {Component} from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n  }\n\n  handleChange=(e)=>{\n    this.setState({searchField : e.target.value})\n  }\n\n  render(){\n\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder= 'search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters = {filteredMonsters} />\n      </div> \n    )\n  }  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}